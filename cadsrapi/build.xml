<?xml version="1.0" encoding="UTF-8"?>

<!--************************************************************************
* This is the top-level build file for the project. It creates a local copy 
* of the caCORE SDK, copies this project's custom file versions over top of 
* it and then calls the build-project.xml ant script to actually build the 
* system. 
*************************************************************************-->
		
<project name="caDSR_API" default="build-system" basedir=".">
	
	
	<!--************************************************************************
    * When using this build file as a template to create other caCORE-based 
    * systems, the following must be customized.
	*************************************************************************-->
		
	<description>Build script for the caDSR API</description>

	<property name="sdk.home.dir" value="../SDK4" />
	<property name="project.home.dir" value="../cadsrapi" />

	<target name="help" 
			description="Lists commonly used targets">
		<echo>========================</echo>
		<echo> caDSR API Build Script</echo>
		<echo>========================</echo>
		<echo>ant build-system - Build entire system</echo>
		<echo>ant clean        - Remove generated build artifacts</echo>
	</target>

	<target name="load-project" 
			description="Copy the project's custom conf files and model over the SDK">

		<!-- copy model -->
		<copy todir="${project.build.dir}/models" overwrite="true">
			<fileset dir="${project.home.dir}/models">
				<include name="*.xmi" />
			</fileset>
		</copy>

		<!-- copy system configuration -->
		<copy todir="${project.build.dir}/conf" overwrite="true">
			<fileset dir="${project.home.dir}/conf">
				<include name="**/*" />
			</fileset>
		</copy>

	</target>
	
	
	<!--************************************************************************
    * The rest of this file is generally not project specific and should 
    * not need to be modified. 
	*************************************************************************-->

	<property name="project.build.dir" value="${project.home.dir}/build" />
	<property name="project.output.dir" value="${project.home.dir}/output" />
	
	<target name="clean" 
			description="Removes generated files">
    	<delete dir="${project.build.dir}" quiet="true"/>
    	<delete dir="${project.output.dir}" quiet="true"/>
	</target>
	
	<condition property="project.ready">
		<available file="${project.build.dir}/build.xml"/>
	</condition>
			
	<target name="create-build">
		<antcall target="load-sdk" />
		<antcall target="load-project" />
	</target>

	<target name="build-system" depends="create-build"
			description="Generate the entire system">
		<ant antfile="build-project.xml" inheritAll="false"/>
	</target>

	<target name="load-sdk" unless="project.ready"
			description="Make a local copy of the SDK">

		<mkdir dir="${project.build.dir}"/>
		<mkdir dir="${project.build.dir}/models"/>
	
		<copy todir="${project.build.dir}">
			<fileset dir="${sdk.home.dir}">
				<include name="build.*" />
				<include name="build-scripts/**/*" />
				<include name="codegen/**/*" />
				<include name="conf/**/*" />
				<include name="system/**/*" />
			</fileset>
		</copy>
	
	</target>
	
</project>
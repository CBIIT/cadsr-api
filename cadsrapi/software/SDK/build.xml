<?xml version="1.0" encoding="UTF-8"?>

<!--L
  Copyright Oracle Inc, SAIC-F.

  Distributed under the OSI-approved BSD 3-Clause License.
  See http://ncip.github.com/cadsr-api/LICENSE.txt for details.
L-->

<!--************************************************************************
* This is the top-level build file for the project. It creates a local copy 
* of the caCORE SDK, copies this project's custom file versions over top of 
* it and then calls the build-project.xml ant script to actually build the 
* system. 
*************************************************************************-->
<project name="cadsrapi" default="build:system" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<path id="maven-ant-tasks.classpath" path="antlib/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
		uri="antlib:org.apache.maven.artifact.ant"
		classpathref="maven-ant-tasks.classpath"/>

	<property name="src.dir" location="${basedir}/common/customizations/java" />
	<property name="migration.src.dir" location="${basedir}/migration/src" />
	<property name="migration.lib.dir" location="${basedir}/migration/lib" />
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="docs.dir" location="${basedir}/docs" />
	<property name="ds.dir" location="${basedir}/resources/ds" />
	<property name="orm.dir" location="${basedir}/resources/conf/ORM" />
	<property name="system.lib.dir" location="${basedir}/lib/system" />
	<property name="build.dir" location="${basedir}/build" />
	<property name="build.classes.dir" location="${basedir}/build/classes" />
	<property name="dist.dir" location="${basedir}/dist" />
	<property name="output.client.remote.dir" location="${basedir}/dist/remote" />
	<property name="objectcart.orm.dir" location="${basedir}/conf/ORM/gov/nih/nci/objectCart/domain" />
	

	<property name="download.dir" value="${basedir}/download" />
	<property name="web.dir" value="${basedir}/web" />
	<property name="unzip.dir" value="${basedir}/cacore_sdk_45" />
	<property name="project.build.dir" value="${basedir}/build" />
	<property name="project.output.dir" value="${basedir}/output" />
	<property name="common.dir" value="${basedir}/common" />
	<property name="conf.dir" value="${basedir}/conf" />
	
	<property file="build.properties" />
	<property file="${conf.dir}/install.properties" />
	<property name="project.home" location="${sdk.home.dir}/example-project" />
	<property name="project.build.home" location="${project.home}/build" />

	<property name="project.dist.dir" value="${project.output.dir}/${PROJECT_NAME}" />
	<property name="package.output.dir" value="${project.dist.dir}/package" />
	<property name="output.package.local.dir" value="${package.output.dir}/local-client" />
	<property name="output.package.remote.dir" value="${package.output.dir}/remote-client" />
	<property name="output.package.ws.dir" value="${package.output.dir}/ws-client" />
	<property name="package.system.dir" value="${package.output.dir}/webapp" />
	<property name="project.home" location="${sdk.home.dir}/example-project" />
	<property name="project.target" location="${project.home}/target" />
	<property name="project.dist" location="${project.target}/dist" />
	<property name="package.client.dir" location="${project.dist}/exploded/output/${PROJECT_NAME}/package" />
	<property name="package.local" location="${package.client.dir}/local-client" />
	<property name="package.remote" location="${package.client.dir}/remote-client" />
	<property name="package.ws" location="${package.client.dir}/ws-client" />
	<property name="war.dir" location="${package.client.dir}/server/jboss/server/default/deploy">
	</property>

	<property name="project.build.home" location="${project.home}/build" />

	<property name="CADSR.DS.URL" value="${CADSR.DS.TNS.HOST}:${CADSR.DS.TNS.PORT}:${CADSR.DS.TNS.SID}" />
	<property name="CADSR.DS.USER" value="${CADSR.DS.USER}" />
	<property name="CADSR.DS.PSWD" value="${CADSR.DS.PSWD}" />
	<property name="PROJECT_NAME" value="${PROJECT_NAME}" />
	<property name="CONNECTION.URL" value="jdbc:oracle:thin:@${CADSR.DS.URL}" /> <!-- Adding a single point connection string concatenation -->
	<filter token="CADSR.DS.URL" value="${CADSR.DS.URL}" />
	<filter token="CADSR.DS.USER" value="${CADSR.DS.USER}" />
	<filter token="CADSR.DS.PSWD" value="${CADSR.DS.PSWD}" />


	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
			<exclude name="asm-*.jar"/>			
		</fileset>
		<fileset dir="${package.local}/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="migration-classpath">
		<fileset dir="${migration.lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="classpath-client">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${output.package.local.dir}/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<target name="clean" description="Removes generated files">
		<delete dir="${project.build.dir}" quiet="true" />
		<delete dir="${project.output.dir}" quiet="true" />
		<delete dir="${package.system.dir}" quiet="true" />

	</target>

	<target name="customize-sdk">
		<antcall target="load-sdk" />
		<antcall target="load-project" />
	</target>

	<!-- check whether sdk binary file from the common library has been downloaded-->
	<condition property="cacore-sdk.downloaded">
		<available file="${download.dir}/${cacore-sdk.binaries.file}" />
	</condition>

	<!-- download the sdk binary only if it's not yet in the download directory -->
	<target name="retrieve:cacore-sdk" unless="cacore-sdk.downloaded">
		<echo message="Retrieving caCORE SDK ..." />
		<mkdir dir="${download.dir}" />
		<get src="${cacore-sdk.src.url}" dest="${download.dir}/${cacore-sdk.binaries.file}" />
	</target>

	<!-- check whether sdk has already been installed at sdk.home.dir -->
	<condition property="cacore-sdk.installed">
		<available file="${sdk.home.dir}" />
	</condition>

	<!-- install sdk only if sdk.home.dir is not empty -->
	<target name="install:cacore-sdk">
		<antcall target="retrieve:cacore-sdk" />
		<mkdir dir="${unzip.dir}" />
		<unzip src="${download.dir}/SDK-4.5-src.zip" dest="${sdk.home.dir}" />
	</target>
	<target name="load-sdk" depends="install:cacore-sdk" description="Make a local copy of the SDK">

		<mkdir dir="${project.build.dir}" />
		<mkdir dir="${project.build.dir}/models" />


	</target>

	<target name="load-project" description="Copy the project's custom conf files and model over the SDK">
		<!-- delete struts 2.3.15.1, 2.3.32, 2.3.34 & 2.3.35 files -->
		<delete file="${sdk.home.dir}/software/lib/compile/struts2-core-2.3.15.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/compile/struts2-dojo-plugin-2.3.15.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/compile/xwork-core-2.3.15.1.jar" quiet="true" />		
		<delete file="${sdk.home.dir}/software/lib/compile/struts2-core-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/compile/struts2-dojo-plugin-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/compile/xwork-core-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/compile/struts2-core-2.3.34.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/compile/struts2-dojo-plugin-2.3.34.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/compile/xwork-core-2.3.34.jar" quiet="true" />		
		<delete file="${sdk.home.dir}/software/lib/compile/struts2-core-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/compile/struts2-dojo-plugin-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/compile/xwork-core-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/struts2-core-2.3.15.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/struts2-dojo-plugin-2.3.15.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/xwork-core-2.3.15.1.jar" quiet="true" />				
		<delete file="${sdk.home.dir}/software/lib/runtime/struts2-core-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/struts2-dojo-plugin-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/xwork-core-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/struts2-core-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/struts2-dojo-plugin-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/xwork-core-2.3.32.jar" quiet="true" />		
		<delete file="${sdk.home.dir}/software/lib/runtime/struts2-core-2.3.34.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/struts2-dojo-plugin-2.3.34.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/xwork-core-2.3.34.jar" quiet="true" />				
		<delete file="${sdk.home.dir}/software/lib/runtime/commons-io-2.0.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/commons-fileupload-1.2.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/commons-fileupload-1.3.jar" quiet="true" />		
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/struts2-core-2.3.15.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/struts2-dojo-plugin-2.3.15.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/xwork-core-2.3.15.1.jar" quiet="true" />		
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/struts2-core-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/struts2-dojo-plugin-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/xwork-core-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/struts2-core-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/struts2-dojo-plugin-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/xwork-core-2.3.32.jar" quiet="true" />		
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/struts2-core-2.3.34.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/struts2-dojo-plugin-2.3.34.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/xwork-core-2.3.34.jar" quiet="true" />				
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/commons-io-2.0.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/commons-logging-1.1.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/commons-fileupload-1.2.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/commons-fileupload-1.3.jar" quiet="true" />		
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/struts2-core-2.3.15.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/struts2-dojo-plugin-2.3.15.1.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/xwork-core-2.3.15.1.jar" quiet="true" />		
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/struts2-core-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/struts2-dojo-plugin-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/xwork-core-2.3.35.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/struts2-core-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/struts2-dojo-plugin-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/xwork-core-2.3.32.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/struts2-core-2.3.34.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/struts2-dojo-plugin-2.3.34.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/xwork-core-2.3.34.jar" quiet="true" />				
		<delete file="${sdk.home.dir}/software/lib/compile/asm-1.5.3.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/lib/runtime/asm-1.5.3.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/compile/asm-1.5.3.jar" quiet="true" />
		<delete file="${sdk.home.dir}/software/target/modules/lib/runtime/asm-1.5.3.jar" quiet="true" />
		
		<!-- copy struts files -->
		<copy todir="${sdk.home.dir}/software/lib/compile" overwrite="true">
					<fileset dir="${lib.dir}">
						<include name="struts*.jar" />
					</fileset>
					<fileset dir="${lib.dir}">
						<include name="xwork*.jar" />
					</fileset>
					<fileset dir="${lib.dir}">
						<include name="commons*.jar" />
					</fileset>					
		</copy>
		<copy todir="${sdk.home.dir}/software/lib/runtime" overwrite="true">
					<fileset dir="${lib.dir}">
						<include name="struts*.jar" />
					</fileset>
					<fileset dir="${lib.dir}">
						<include name="xwork*.jar" />
					</fileset>	
					<fileset dir="${lib.dir}">
						<include name="commons*.jar" />
					</fileset>					
		</copy>	
		<copy todir="${sdk.home.dir}/software/target/modules/lib/runtime" overwrite="true">
					<fileset dir="${lib.dir}">
						<include name="struts*.jar" />
					</fileset>
					<fileset dir="${lib.dir}">
						<include name="xwork*.jar" />
					</fileset>	
					<fileset dir="${lib.dir}">
						<include name="commons*.jar" />
					</fileset>					
		</copy>
		<copy todir="${sdk.home.dir}/software/target/modules/lib/compile" overwrite="true">
					<fileset dir="${lib.dir}">
						<include name="struts*.jar" />
					</fileset>
					<fileset dir="${lib.dir}">
						<include name="xwork*.jar" />
					</fileset>	
					<fileset dir="${lib.dir}">
						<include name="commons*.jar" />
					</fileset>					
		</copy>		
		
		<!-- copy model -->
		<copy todir="${project.home}/models" overwrite="true">
			<fileset dir="${basedir}/models">
				<include name="*.xmi" />
			</fileset>
		</copy>


		<!-- copy conf folder -->

		<copy todir="${project.build.home}" overwrite="true" filtering="true">
			<fileset dir="${conf.dir}">
				<include name="**/*" />
			</fileset>
		</copy>
		<replace file="${project.build.home}/install.properties" token="@CADSR.DS.TNS.HOST@" value="${CADSR.DS.TNS.HOST}" />
		<replace file="${project.build.home}/install.properties" token="@CADSR.DS.TNS.PORT@" value="${CADSR.DS.TNS.PORT}" />
		<replace file="${project.build.home}/install.properties" token="@CADSR.DS.TNS.SID@" value="${CADSR.DS.TNS.SID}" />
		<replace file="${project.build.home}/install.properties" token="@CADSR.DS.USER@" value="${CADSR.DS.USER}" />
		<replace file="${project.build.home}/install.properties" token="@CADSR.DS.PSWD@" value="${CADSR.DS.PSWD}" />

	</target>
	<target name="build:system" description="Builds the entire system. This is used mostly by development team or BDA certification team" depends="retrieve:cacore-sdk,load-sdk,load-project">
		<ant antfile="${project.build.home}/build.xml" inheritall="false" inheritrefs="false" target="build:SDK" />
		<antcall target="package-webapp" />
		<delete file="${output.package.local.dir}/lib/asm-1.5.3.jar" quiet="true" />		
		<delete file="${output.package.remote.dir}/lib/asm-1.5.3.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/asm-1.5.3.jar" quiet="true" />
		
		<antcall target="-build-client-jar" />
		<antcall target="-copy-client-jar" />
		<ant antfile="build.xml" target="war" dir="../formrest" inheritall="false">
			<property name="basedir" value="../formrest"/>
			<property name="database.url" value="${CONNECTION.URL}"/>
			<property name="database.user" value="${FORMREST.DS.USER}"/>
			<property name="database.password" value="${FORMREST.DS.PSWD}"/>
		</ant>
		<ant antfile="build.xml" target="build-product" dir="../freestyle-search/software/freestylesearch" inheritall="false">
			<property name="basedir" value="../freestyle-search/software/freestylesearch"/>
			<property name="CADSR.DS.URL" value="${CONNECTION.URL}"/>
			<property name="FREESTYLE.DS.URL" value="${CADSR.DS.URL}.nci.nih.gov"/>
			<property name="FREESTYLE.DS.USER" value="${FREESTYLE.DS.USER}"/>
			<property name="FREESTYLE.DS.PSWD" value="${FREESTYLE.DS.PSWD}"/>
			<property name="tier" value="${tier}"/>
		</ant>
		<artifact:mvn pom="../cderest/pom.xml">
			<arg value="package"/>
			<arg value="-Ddatabase.url=${CONNECTION.URL}"/>
			<arg value="-Ddatabase.username=${CDEREST.DS.USER}"/>
			<arg value="-Ddatabase.password=${CDEREST.DS.PSWD}"/>		    
  		</artifact:mvn>
		<mkdir dir="${basedir}/dist/war/META-INF"/>
		<mkdir dir="${basedir}/dist/freestyle_autorun" />
		<!-- <copy file="${conf.dir}/jboss-deployment-structure.xml" todir="${basedir}/dist/war" overwrite="true"/> -->
		<copy file="${package.system.dir}/cadsrapi41.war" todir="${basedir}/dist/war" overwrite="true"/>
		<copy file="../formrest/target/dist/formrest.war" todir="${basedir}/dist/war" overwrite="true"/>
		<copy file="../cderest/target/cderest.war" todir="${basedir}/dist/war" overwrite="true"/>
		<copy file="../freestyle-search/software/freestylesearch/deployment-artifacts/freestyle.war" todir="${basedir}/dist/war" overwrite="true"/>
		<copy todir="${basedir}/dist/war/META-INF" overwrite="true">
			<fileset dir="${common.dir}/customizations/META-INF">
				<include name="**/*" />
			</fileset>
		</copy>
		
		<filter token="connectionUrl" value="${CADSR.DS.URL}"/>
		<echo>connectionUrl = ${connectionUrl}</echo>
		<filter token="cdeBrowserUser" value="${CADSR.DS.USER}"/>
		<echo>cdeBrowserUser = ${cdeBrowserUser}</echo>
		<filter token="cdeBrowserPassword" value="${CADSR.DS.PSWD}"/>
		<echo>cdeBrowserPassword not echoed</echo>		
		<filter token="freestyleUser" value="${FREESTYLE.DS.USER}"/>
		<echo>freestyleUser = ${freestyleUser}</echo>
		<filter token="freestylePassword" value="${FREESTYLE.DS.PSWD}"/>
		<echo>freestylePassword not echoed</echo>
		<filter token="logLevel" value="INFO"/>

		
		<jar jarfile="${basedir}/dist/cadsrapi41.ear" basedir="${basedir}/dist/war" />
		<delete dir="${basedir}/dist/war" quiet="true" />
		<copy file="../formrest/target/dist/formbuilder.xslt" todir="${basedir}/dist" overwrite="true"/>
		<copy file="../formrest/target/dist/transform.properties" todir="${basedir}/dist" overwrite="true"/>
		<copy file="../formrest/target/dist/cadsrutil.properties" todir="${basedir}/dist" overwrite="true"/>
		<copy file="../cderest/target/cdebrowser.xslt" todir="${basedir}/dist" overwrite="true"/>
		<copy file="../cderest/target/ConvertCDE.xslt" todir="${basedir}/dist" overwrite="true"/>
		<copy file="${conf.dir}/cadsrapi_modules.cli" todir="${basedir}/dist" overwrite="true" filtering="true"/>
		<copy file="${conf.dir}/cadsrapi_setup_deploy.cli" todir="${basedir}/dist" overwrite="true" filtering="true"/>
		<copy file="${lib.dir}/ojdbc6.jar" todir="${basedir}/dist" overwrite="true"/>		
		<copy todir="${basedir}/dist/freestyle_autorun" overwrite="true">
			<fileset dir="../freestyle-search/software/freestylesearch/deployment-artifacts/bin">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy file="${war.dir}/${PROJECT_NAME}rest.war" todir="${basedir}/dist" overwrite="true"/>
	</target>
	<target name="build:cderest">
		<artifact:mvn pom="../cderest/pom.xml">
			<arg value="package"/>
			<arg value="-Ddatabase.url=${CONNECTION.URL}"/>
			<arg value="-Ddatabase.username=${CADSR.DS.USER}"/>
			<arg value="-Ddatabase.password=${CADSR.DS.PSWD}"/>
  		</artifact:mvn>
	</target>
	<target name="build:formrest">
		<ant antfile="build.xml" target="war" dir="../formrest" inheritall="false">
			<property name="basedir" value="../formrest"/>
			<property name="database.url" value="${CONNECTION.URL}"/>
			<property name="database.user" value="${CADSR.DS.USER}"/>
			<property name="database.password" value="${CADSR.DS.PSWD}"/>
		</ant>
	</target>	
	<target name="deploy:cderest" depends="build:cderest">
		<copy file="${basedir}/dist/cderest.war" todir="C:/bin/jboss-5.1.0.GA/server/default/deploy"/>
	</target>
	<target name="unzip:war">
		<delete dir="${web.dir}" quiet="true" />
		<mkdir dir="${web.dir}" />
		<unzip src="${war.dir}/${PROJECT_NAME}.war" dest="${web.dir}" overwrite="true" />
	</target>
	<target name="copy-customization">
		<copy todir="${web.dir}" overwrite="true">
			<fileset dir="${common.dir}/customizations/SDK/system/web">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy file="${project.dist.dir}/caDSRAPI-core-ext.jar" todir="${web.dir}/WEB-INF/lib"/>
	</target>
	
	<target name="-copy-client-jar">
		<copy file="${project.dist.dir}/caDSRAPI-client-ext.jar" todir="${output.package.remote.dir}/lib"/>
		<copy file="${project.dist.dir}/caDSRAPI-client-ext.jar" todir="${output.package.local.dir}/lib"/>
	</target>	

	<target name="package-webapp" depends="unzip:war,build-core-jar,copy-customization">
		<mkdir dir="${project.output.dir}" />
		<mkdir dir="${package.output.dir}" />
		<mkdir dir="${package.system.dir}" />
		<mkdir dir="${output.package.local.dir}" />
		<mkdir dir="${output.package.remote.dir}" />
		<mkdir dir="${output.package.ws.dir}" />

		<copy todir="${output.package.local.dir}" overwrite="true">
			<fileset dir="${package.local}">
			</fileset>
		</copy>
		
		<copy todir="${output.package.remote.dir}" overwrite="true">
			<fileset dir="${package.remote}">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${output.package.ws.dir}" overwrite="true">
			<fileset dir="${package.ws}">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${web.dir}/WEB-INF/lib" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="**/*" />
			</fileset>
		</copy>
		
		<copy todir="${output.package.local.dir}/conf" overwrite="true">
			<fileset dir="${conf.dir}/system/package/local-client/conf">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${output.package.remote.dir}/conf" overwrite="true">
			<fileset dir="${conf.dir}/system/package/remote-client/conf">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${output.package.ws.dir}/conf" overwrite="true">
			<fileset dir="${conf.dir}/system/package/ws-client/conf">
				<include name="**/*" />
			</fileset>
		</copy>


		<antcall target="-build-client-jar" /> 	
		<copy file="${project.dist.dir}/caDSRAPI-client-ext.jar" todir="${web.dir}/WEB-INF/lib"/>
		<delete file="${web.dir}/WEB-INF/lib/servlet.jar" quiet="true" />
		<replace file="${web.dir}/WEB-INF/classes/application-config-security.xml" token="@CADSR.DS.URL@" value="${CADSR.DS.URL}" />
		<replace file="${web.dir}/WEB-INF/classes/application-config-security.xml" token="@CADSR.DS.USER@" value="${CADSR.DS.USER}" />
		<replace file="${web.dir}/WEB-INF/classes/application-config-security.xml" token="@CADSR.DS.PSWD@" value="${CADSR.DS.PSWD}" />
		
		<touch file="${objectcart.orm.dir}/Cart.hbm.xml"/>
		<touch file="${objectcart.orm.dir}/CartObject.hbm.xml"/>
		<jar destfile="${web.dir}/WEB-INF/lib/cadsrapi41-orm.jar" update="true">
			<zipfileset file="${objectcart.orm.dir}/Cart.hbm.xml" prefix="gov/nih/nci/cadsr/objectcart/domain/" />
			<zipfileset file="${objectcart.orm.dir}/CartObject.hbm.xml" prefix="gov/nih/nci/cadsr/objectcart/domain/" />
		</jar>
		<delete file="${web.dir}/WEB-INF/lib/asm-1.5.3.jar" quiet="true" />		
		<delete file="${web.dir}/WEB-INF/lib/asm-3.1.jar" quiet="true" />					
		<delete file="${web.dir}/WEB-INF/lib/ojdbc14-10.2.0.3.0.jar" quiet="true" />		
		<delete file="${web.dir}/WEB-INF/lib/cglib-2.1_3.jar" quiet="true" />				
		<delete file="${web.dir}/WEB-INF/lib/cglib-nodep-3.1.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/struts2-core-2.3.16.3.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/struts2-dojo-plugin-2.3.16.3.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/xwork-core-2.3.16.3.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/ognl-3.0.6.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/struts2-core-2.3.35.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/struts2-dojo-plugin-2.3.35.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/xwork-core-2.3.35.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/struts2-core-2.3.15.1.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/struts2-dojo-plugin-2.3.15.1.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/xwork-core-2.3.15.1.jar" quiet="true" />		
		<delete file="${web.dir}/WEB-INF/lib/struts2-core-2.3.32.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/struts2-dojo-plugin-2.3.32.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/xwork-core-2.3.32.jar" quiet="true" />		
		<delete file="${web.dir}/WEB-INF/lib/struts2-core-2.3.34.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/struts2-dojo-plugin-2.3.34.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/xwork-core-2.3.34.jar" quiet="true" />				
		<delete file="${web.dir}/WEB-INF/lib/freemarker-2.3.19.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/freemarker-2.3.22.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/commons-io-1.3.2.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/commons-logging-1.1.1.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/commons-lang-2.6.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/commons-lang3-3.1.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/commons-codec-1.3.jar" quiet="true" />
		<delete file="${web.dir}/WEB-INF/lib/commons-fileupload-1.3.jar" quiet="true" />		
		<delete file="${web.dir}/WEB-INF/lib/commons-fileupload-1.3.3.jar" quiet="true" />		
		<delete file="${web.dir}/WEB-INF/lib/axis.jar" quiet="true" />		
		<war destfile="${package.system.dir}/${PROJECT_NAME}.war" webxml="${web.dir}\WEB-INF\web.xml">

			<manifest>
				<attribute name="Generated-By" value="caCORE SDK Code Generator" />
			</manifest>

			<fileset dir="${web.dir}">
				<include name="**/*" />

			</fileset>
		</war>

		<copy todir="${project.dist.dir}/jboss" overwrite="true">
			<fileset dir="${common.dir}/oracle-ds">
				<include name="cadsrapi-oracle-ds.xml" />

			</fileset>
		</copy>
		<replace file="${project.dist.dir}/jboss/cadsrapi-oracle-ds.xml" token="@CADSR.DS.URL@" value="${CADSR.DS.URL}" />
		<replace file="${project.dist.dir}/jboss/cadsrapi-oracle-ds.xml" token="@CADSR.DS.USER@" value="${CADSR.DS.USER}" />
		<replace file="${project.dist.dir}/jboss/cadsrapi-oracle-ds.xml" token="@CADSR.DS.PSWD@" value="${CADSR.DS.PSWD}" />

	</target>

	<target name="-build-client-jar" depends="compile-client" description="Prepates distribution files">
		<jar destfile="${project.dist.dir}\caDSRAPI-client-ext.jar" basedir="${build.classes.dir}">
			<manifest>
				<attribute name="Generated-By" value="caCORE SDK Code Generator" />
			</manifest>
			<include name="gov/nih/nci/cadsrapi/client/**/*" />
			<include name="gov/nih/nci/cadsrapi/applicationService/*.*" />
			<include name="gov/nih/nci/cadsrapi/util/ValidatorException.*" />
			<fileset dir="${src.dir}">
				<include name="gov/nih/nci/cadsrapi/client/**/*" />
				<include name="gov/nih/nci/cadsrapi/applicationService/*.*" />
				<include name="gov/nih/nci/cadsrapi/util/ValidatorException.*" />
			</fileset>
			<fileset dir="${output.package.remote.dir}/conf">
				<include name="log4j.properties" />
			</fileset>
		</jar>
	</target>
	
	<target name="build-core-jar" depends="compile-core" description="Prepates distribution files">
		<jar destfile="${project.dist.dir}\caDSRAPI-core-ext.jar" basedir="${build.classes.dir}">
			<manifest>
				<attribute name="Generated-By" value="caCORE SDK Code Generator" />
			</manifest>
			<include name="gov/nih/nci/cadsrapi/dao/**/*" />
			<include name="gov/nih/nci/cadsrapi/dao/orm/**/*" />
			<include name="gov/nih/nci/cadsrapi/applicationService/impl/**/*" />
			<include name="gov/nih/nci/cadsrapi/util/**/*" />
			<include name="gov/nih/nci/cadsrapi/util/xml/**/*" />
			<fileset dir="${src.dir}">
				<include name="gov/nih/nci/cadsrapi/dao/**/*" />
				<include name="gov/nih/nci/cadsrapi/dao/orm/**/*" />
				<include name="gov/nih/nci/cadsrapi/applicationService/impl/**/*" />
				<include name="gov/nih/nci/cadsrapi/util/**/*" />
				<include name="gov/nih/nci/cadsrapi/util/xml/**/*" />
			</fileset>
		</jar>

	</target>
	
	<target name="init">
		<delete dir="${build.classes.dir}" quiet="true" />
		<delete dir="${project.dist.dir}" quiet="true" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${project.dist.dir}" />
	</target>
	
	<target name="compile-core" depends="init" description="Compiles source code">
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true">
			<classpath refid="classpath" />
			<exclude name="gov/nih/nci/cadsrapi/jUnit/**/*" />
		</javac>
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}" includes="gov/nih/nci/system/web/struts/action/package.properties" />
		</copy>
	</target>
	<target name="compile-client" description="Compiles source code">
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true">
			<classpath refid="classpath-client" />
			<exclude name="gov/nih/nci/cadsrapi/jUnit/**/*" />
		</javac>
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}" includes="gov/nih/nci/system/web/struts/action/package.properties" />
		</copy>
	</target>
	<target name="compile" depends="init" description="Compiles source code">
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true">
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="migration:build" depends="init" description="Compiles source code">
		<javac srcdir="${migration.src.dir}" destdir="${build.classes.dir}" debug="true">
			<classpath refid="migration-classpath" />
		</javac>
		<jar destfile="${project.dist.dir}\caDSRAPI-db-migration.jar" basedir="${build.classes.dir}">
			<manifest>
				<attribute name="Generated-By" value="caDSR API Database migration utility" />
			</manifest>
			<include name="gov/**/*" />
		</jar>

	</target>

	<target name="migration:run" depends="migration:build" description="Compiles source code">
	<java className="gov.nih.nci.objectCart.migration.MigrationUtility" >
		<arg value="${basedir}/migration/migration.properties"/>
		<classpath>
		   <pathelement location="${project.dist.dir}\caDSRAPI-db-migration.jar"/>
		</classpath>
		<classpath refid="migration-classpath" />
	</java>
	</target>

</project>